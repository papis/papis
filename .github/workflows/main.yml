name: CI

on:
  workflow_dispatch:
  push:
    branches: [ "main", "ci-*" ]
    tags: [ 'v**' ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # 17:00 on Friday (UTC)
    - cron: "00 17 * * 5"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  typos:
    name: Spelling (typos)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: crate-ci/typos@master

  build:
    name: Unittest ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: make ci-install
      shell: bash

    - name: Check linting and type annotations
      run: make ci-lint
      shell: bash

    - name: Run tests
      if: success() || failure()
      run: make ci-test
      shell: bash

  database:
    name: Database (${{ matrix.database }}/${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        database: ["whoosh"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: make ci-install
      shell: bash

    - name: Run tests for '${{ matrix.database }}' database
      env:
        PAPIS_DATABASE_BACKEND: ${{ matrix.database }}
      run: make ci-test
      shell: bash

  pypi-release:
    needs: [build]
    name: PyPI Release
    environment: pypi
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - id: dist
      run: |
        # NOTE: need to make the wheels first so that the sdist doesn't add the
        # extra generated `CHANGELOG-LATEST.md` file.
        bash tools/make-wheels.sh
        python tools/extract-changelog.py CHANGELOG.md -o CHANGELOG-LATEST.md

    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      name: Publish Package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      name: Publish a GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        prerelease: ${{ contains(github.ref, 'rc') }}
        name: Version ${{ github.ref_name }}
        body_path: CHANGELOG-LATEST.md
        files: |
          dist/*.tar.gz
          dist/*.whl
        fail_on_unmatched_files: true
